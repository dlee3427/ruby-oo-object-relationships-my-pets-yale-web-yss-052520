class Owner
    # code goes here
  
    attr_reader :name, :species
  
    @@all = [] 
  
    def initialize(name, species = "human")
      @name = name
      @species = species
      @@all << self
    end 
  
    def say_species
      return "I am a #{self.species}."
    end
  
    def self.all
      @@all
    end
  
    def self.count  
      @@all.count
    end
  
    def self.reset_all
      @@all.clear
    end
  
    def cats 
      Cat.all.select {|cat| cat.owner == self} 
    end 
  
    def dogs
      Dog.all.select {|dog| dog.owner == self}
    end
  
    def buy_cat(name)
      Cat.new(name, self)
    end 
  
    def buy_dog(name)
      Dog.new(name, self)
    end 
  
    def walk_dogs
      self.dogs.each do |dog|
        dog.mood = "happy"
      end
    end 
  
    def feed_cats 
      self.cats.each do |cat|
        cat.mood = "happy"
      end 
    end 
  
    def sell_pets 
      all_pets = self.dogs + self.cats 
  
      all_pets.each do |pet|
        pet.mood = "nervous"
        pet.owner = nil
      end 
    end 
  
    def list_pets 
      "I have #{self.dogs.count} dog(s), and #{self.cats.count} cat(s)."
    end
  
  
  end


  class Dog
    # code goes here
    attr_reader :name 
    attr_accessor :owner, :mood 
    
    @@all = [] 
  
    def initialize(name, owner, mood = "nervous")
      @name = name
      @owner = owner
      @mood = mood
      @@all << self 
    end
  
    def self.all 
      @@all 
    end 
  
  end

  class Cat
    # code goes here
    attr_reader :name
    attr_accessor :owner, :mood
  
    @@all = []
  
    def initialize(name, owner, mood = "nervous")
      @name = name 
      @owner = owner
      @mood = mood
      @@all << self 
    end
  
    def self.all
      @@all
    end
    
  end